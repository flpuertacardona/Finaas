// <auto-generated />
using System;
using Finaas.Web.Data.Investigacion;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Finaas.Web.Migrations
{
    [DbContext(typeof(InvestigacionContext))]
    [Migration("20200517171734_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgendaId")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaAprociacion")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaProyecto")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActividad")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramaId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrmaId")
                        .HasColumnType("int");

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("int");

                    b.Property<int>("Regulacion")
                        .HasColumnType("int");

                    b.Property<int>("UnidadApoyo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("ProgramaId");

                    b.HasIndex("PublicacionId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaActividad")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<int?>("MsterProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("MsterProjectId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Cultura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CulturaConocimiento")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Culturas");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.EjesTematico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.ToTable("EjesTematico");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("GrupoSanguineo")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Encuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CulturaConocimiento")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GrupoInvestigacionId")
                        .HasColumnType("int");

                    b.Property<int>("GruposInvestigacionId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlResultados")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoInvestigacionId");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Escuela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Conocimiento")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Escuelas");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Financiacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriasRecursos")
                        .HasColumnType("int");

                    b.Property<float>("Disponible")
                        .HasColumnType("real");

                    b.Property<int>("EjecucionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDisponible")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuenteRecursos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EjecucionId");

                    b.ToTable("Financiaciones");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categria")
                        .HasColumnType("int");

                    b.Property<int>("CulturaId")
                        .HasColumnType("int");

                    b.Property<int>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CulturaId");

                    b.HasIndex("EscuelaId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.MsterProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("DisponibilidadPresupuestal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIniciacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Presupuesto")
                        .HasColumnType("real");

                    b.Property<int>("Regulacion")
                        .HasColumnType("int");

                    b.Property<int>("UnidadApoyo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Ejecuciones");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AsignaturaId")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaInvestigador")
                        .HasColumnType("int");

                    b.Property<int>("Conocimiento")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsignaturaId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Revista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlResultados")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Actividad", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Agenda", "Agenda")
                        .WithMany("Actividades")
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finaas.Web.Data.Investigacion.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("ProgramaId");

                    b.HasOne("Finaas.Web.Data.Investigacion.Publicacion", "Publicacion")
                        .WithMany()
                        .HasForeignKey("PublicacionId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Agenda", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finaas.Web.Data.Investigacion.MsterProject", null)
                        .WithMany("AgendasConocimiento")
                        .HasForeignKey("MsterProjectId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Asignatura", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Escuela", "Escuela")
                        .WithMany()
                        .HasForeignKey("EscuelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finaas.Web.Data.Investigacion.Programa", null)
                        .WithMany("Asignaturas")
                        .HasForeignKey("ProgramaId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.EjesTematico", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Escuela", null)
                        .WithMany("EjesTematicos")
                        .HasForeignKey("EscuelaId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Encuesta", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Grupo", "GrupoInvestigacion")
                        .WithMany()
                        .HasForeignKey("GrupoInvestigacionId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Escuela", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Profesor", "Decano")
                        .WithMany()
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Financiacion", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.MsterProject", "Ejecucion")
                        .WithMany("Financiaciones")
                        .HasForeignKey("EjecucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Grupo", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Cultura", "Cultura")
                        .WithMany()
                        .HasForeignKey("CulturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finaas.Web.Data.Investigacion.Escuela", "Escuela")
                        .WithMany("Grupos")
                        .HasForeignKey("EscuelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.MsterProject", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Grupo", "Grupo")
                        .WithMany("Ejecuciones")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Profesor", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Asignatura", null)
                        .WithMany("Profesores")
                        .HasForeignKey("AsignaturaId");

                    b.HasOne("Finaas.Web.Data.Investigacion.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finaas.Web.Data.Investigacion.Grupo", "Grupo")
                        .WithMany("Cientificos")
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Programa", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Escuela", "Escuela")
                        .WithMany("Programas")
                        .HasForeignKey("EscuelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finaas.Web.Data.Investigacion.Profesor", null)
                        .WithMany("Programas")
                        .HasForeignKey("ProfesorId");
                });

            modelBuilder.Entity("Finaas.Web.Data.Investigacion.Publicacion", b =>
                {
                    b.HasOne("Finaas.Web.Data.Investigacion.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
